<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:local="clr-namespace:Nova.LED.StadiumBrightnessTool.Controls"
                    xmlns:prism="clr-namespace:Microsoft.Practices.Prism.Interactivity;assembly=Microsoft.Practices.Prism.Interactivity"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:view="clr-namespace:Nova.LED.StadiumBrightnessTool.View">

    <Style x:Key="BoxGroupDesignItemStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="1"
                            Padding="{TemplateBinding Control.Padding}"
                            SnapsToDevicePixels="True">
                        <Rectangle Name="boxRectangle"
                                   Width="32"
                                   Height="32"
                                   Fill="Orange"
                                   IsHitTestVisible="True"
                                   SnapsToDevicePixels="true"
                                   StrokeDashArray="2"
                                   StrokeThickness="1">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <prism:InvokeCommandAction Command="{Binding SelectBoxCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Rectangle>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected}">
                            <DataTrigger.Value>
                                <sys:Boolean>true</sys:Boolean>
                            </DataTrigger.Value>
                            <DataTrigger.Setters>
                                <Setter Property="Fill" Value="#FC0FCB2F" TargetName="boxRectangle" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected}">
                            <DataTrigger.Value>
                                <sys:Boolean>false</sys:Boolean>
                            </DataTrigger.Value>
                            <DataTrigger.Setters>
                                <Setter Property="Fill" Value="Orange" TargetName="boxRectangle" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type local:DragThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DragThumb}">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type local:LEDBoxGroupToolItem}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>-->

    <Style TargetType="{x:Type local:LEDBoxGroupToolItem}">
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LEDBoxGroupToolItem}">
                    <Grid>
                        <Rectangle Name="Border"
                                   Fill="Transparent"
                                   SnapsToDevicePixels="true"
                                   StrokeDashArray="2"
                                   StrokeThickness="1" />
                        <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                        -->
        <!--  Content="{TemplateBinding ContentControl.Content}"  -->
        <!--



                    </Grid>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LEDBoxGroupToolItem}">
                    <Grid>
                        <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0"
                                       Width="30"
                                       Height="32"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                       Source="/Resources/Image/cabinet-32.png" />
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0"
                                               Margin="10,0,0,0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Text="{Binding IndexLocation}" />
                                <TextBlock Grid.Row="1"
                                               Margin="10,0,0,0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Text="{Binding BoxCount}" />
                            </Grid>

                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundHover}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}"/>
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LEDBoxGroupTool}">
        <!--<Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Focusable" Value="False" />-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <!--<Setter Property="ItemContainerStyle" Value="{StaticResource FlatItemsControlItem}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LEDBoxGroupTool}">
                    <Border Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Margin="0,5,0,5"
                               ItemHeight="{Binding Path=ItemSize.Height,
                                                    RelativeSource={RelativeSource AncestorType=local:LEDBoxGroupTool}}"
                               ItemWidth="{Binding Path=ItemSize.Width,
                                                   RelativeSource={RelativeSource AncestorType=local:LEDBoxGroupTool}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="{x:Type local:DesignerItem}">
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DesignerItem}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <!--  ContextMenu="{StaticResource DesignerItemContextMenu}"  -->
                        <!--  PART_DragThumb  -->

                        <!--  PART_ResizeDecorator  -->
                        <!--<Control x:Name="PART_ResizeDecorator"
                                 Template="{StaticResource ResizeDecoratorTemplate}"
                                 Visibility="Collapsed" >/-->
                        <!--  PART_ContentPresenter  -->
                        <!--<ContentPresenter x:Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding ContentControl.Padding}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Content="{TemplateBinding ContentControl.Content}" />-->
                        <!--  PART_ConnectorDecorator  -->
                        <!--<Control x:Name="PART_ConnectorDecorator"
                                 Template="{StaticResource ConnectorDecoratorTemplate}"
                                 Visibility="Hidden" />-->
                        <local:DragThumb x:Name="PART_DragThumb" Cursor="SizeAll" />

                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding ContentControl.Padding}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Content="{TemplateBinding ContentControl.Content}">
                            <ContentPresenter.Content>
                                <ItemsControl ItemsSource="{Binding DataContext.LEDBoxes,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                              SnapsToDevicePixels="True"
                                              Style="{StaticResource BoxGroupDesignItemStyle}" />
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsGroup}" Value="True">
                            <Setter TargetName="PART_DragThumb" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ParentID}" Value="{x:Static sys:Guid.Empty}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ResizeDecorator" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>-->
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsDragConnectionOver}" Value="True">
                            <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsGroup}" Value="True">
                            <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Hidden" />
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
